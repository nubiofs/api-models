{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "info": {
    "description": "These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>",
    "title": "Azure ML Web Services Management Client",
    "version": "2016-05-01-preview",
    "x-logo": {
      "backgroundColor": "#333333",
      "url": "https://apis-guru.github.io/api-models/cache/logo/https_azure.github.io_images_logo-msft-dark@2x.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-machinelearning/2016-05-01-preview/swagger/webservices.json",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "arm-machinelearning"
  },
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "parameters": {
    "APIVersionParameter": {
      "description": "The versiong of the Microsoft.MachineLearning resource provider API to be used.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string"
    },
    "SubscriptionIdParameter": {
      "description": "Azure subscription id.",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string"
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearning/webServices": {
      "get": {
        "description": "Retrieve all Azure ML web services in the current Azure subscription.",
        "operationId": "WebServices_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "description": "Continuation token for pagination.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedWebServicesList"
            }
          }
        },
        "tags": [
          "WebServices"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices": {
      "get": {
        "description": "Retrieve all Azure ML web services in a given resource group.",
        "operationId": "WebServices_ListInResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          },
          {
            "description": "Continuation token for pagination.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PaginatedWebServicesList"
            }
          }
        },
        "tags": [
          "WebServices"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}": {
      "delete": {
        "description": "Remove an existing Azure ML web service.",
        "operationId": "WebServices_Remove",
        "responses": {
          "202": {
            "description": "Async delete operation was accepted."
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebServices"
        ],
        "x-ms-long-running-operation": true
      },
      "get": {
        "description": "Retrieve an Azure ML web service definition by its subscription, resource group and name.",
        "operationId": "WebServices_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        },
        "tags": [
          "WebServices"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/SubscriptionIdParameter"
        },
        {
          "description": "Name of the resource group.",
          "in": "path",
          "name": "resourceGroupName",
          "required": true,
          "type": "string"
        },
        {
          "description": "The Azure ML web service name which you want to reach.",
          "in": "path",
          "name": "webServiceName",
          "required": true,
          "type": "string"
        },
        {
          "$ref": "#/parameters/APIVersionParameter"
        }
      ],
      "patch": {
        "description": "Patch an existing Azure ML web service resource.",
        "operationId": "WebServices_Patch",
        "parameters": [
          {
            "description": "The payload to patch the Azure ML web service with.",
            "in": "body",
            "name": "patchPayload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        },
        "tags": [
          "WebServices"
        ],
        "x-ms-long-running-operation": true
      },
      "put": {
        "description": "Creates or updates a new Azure ML web service or update an existing one.",
        "operationId": "WebServices_CreateOrUpdate",
        "parameters": [
          {
            "description": "The payload to create or update the Azure ML web service.",
            "in": "body",
            "name": "createOrUpdatePayload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WebService"
            }
          }
        },
        "tags": [
          "WebServices"
        ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearning/webServices/{webServiceName}/listKeys": {
      "get": {
        "description": "Get the access keys of a particular Azure ML web service",
        "operationId": "WebServices_ListKeys",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Azure ML web service name which you want to reach.",
            "in": "path",
            "name": "webServiceName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebServiceKeys"
            }
          }
        },
        "tags": [
          "WebServices"
        ]
      }
    }
  },
  "definitions": {
    "AssetItem": {
      "description": "Information about an asset associated with the web service.",
      "properties": {
        "inputPorts": {
          "additionalProperties": {
            "$ref": "#/definitions/InputPort"
          },
          "description": "Information about the asset's input ports.",
          "type": "object"
        },
        "locationInfo": {
          "$ref": "#/definitions/AssetLocation",
          "description": "Access information for the asset."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If the asset is a custom module, this holds the module's metadata.",
          "type": "object"
        },
        "name": {
          "description": "Asset's friendly name.",
          "type": "string"
        },
        "outputPorts": {
          "additionalProperties": {
            "$ref": "#/definitions/OutputPort"
          },
          "description": "Information about the asset's output ports.",
          "type": "object"
        },
        "parameters": {
          "description": "If the asset is a custom module, this holds the module's parameters.",
          "items": {
            "$ref": "#/definitions/ModuleAssetParameter"
          },
          "type": "array"
        },
        "type": {
          "description": "Asset's type.",
          "enum": [
            "Module",
            "Resource"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AssetType"
          }
        }
      },
      "required": [
        "name",
        "type",
        "locationInfo"
      ],
      "type": "object"
    },
    "AssetLocation": {
      "description": "Describes the access location for a web service asset.",
      "properties": {
        "credentials": {
          "description": "Access credentials for the asset, if applicable (e.g. asset specified by storage account connection string + blob URI)",
          "type": "string"
        },
        "uri": {
          "description": "The URI where the asset is accessible from, (e.g. aml://abc for system assets or https://xyz for user asets",
          "format": "url",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ],
      "type": "object"
    },
    "ColumnSpecification": {
      "description": "Swagger 2.0 schema for a column within the data table representing a web service input or output. See Swagger specification: http://swagger.io/specification/",
      "properties": {
        "enum": {
          "description": "If the data type is categorical, this provides the list of accepted categories.",
          "items": {
            "type": "object"
          },
          "type": "array"
        },
        "format": {
          "description": "Additional format information for the data type.",
          "enum": [
            "Byte",
            "Char",
            "Datetime",
            "Double",
            "Duration",
            "Float",
            "Int8",
            "Int16",
            "Int32",
            "Int64",
            "Uint8",
            "Uint16",
            "Uint32",
            "Uint64"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ColumnFormat"
          }
        },
        "type": {
          "description": "Data type of the column.",
          "enum": [
            "Boolean",
            "Integer",
            "Number",
            "String"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ColumnType"
          }
        },
        "x-ms-isnullable": {
          "description": "Flag indicating if the type supports null values or not.",
          "type": "boolean"
        },
        "x-ms-isordered": {
          "description": "Flag indicating whether the categories are treated as an ordered set or not, if this is a categorical column.",
          "type": "boolean"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "CommitmentPlan": {
      "description": "Information about the machine learning commitment plan associated with the web service.",
      "properties": {
        "id": {
          "description": "The commitment plan ARM resource  id.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "DiagnosticsConfiguration": {
      "description": "Diagnostics settings for an Azure ML web service.",
      "properties": {
        "expiry": {
          "description": "Moment of time after which diagnostics are no longer collected. If null, diagnostic collection is not time limited.",
          "format": "date-time",
          "type": "string"
        },
        "level": {
          "description": "Level of tracing to be used: None - disables tracing; Error - collects only error (stderr) traces; All - collects all traces (stdout and stderr).",
          "enum": [
            "None",
            "Error",
            "All"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiagnosticsLevel"
          }
        }
      },
      "required": [
        "level"
      ],
      "type": "object"
    },
    "ExampleRequest": {
      "description": "Sample input data for the service's input(s).",
      "properties": {
        "globalParameters": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Sample input data for the web service's global parameters",
          "type": "object"
        },
        "inputs": {
          "additionalProperties": {
            "items": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "type": "array"
          },
          "description": "Sample input data for the web service's input(s) given as an input name to sample input values matrix map.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "GraphEdge": {
      "description": "Defines an edge within the web service's graph.",
      "properties": {
        "sourceNodeId": {
          "description": "The source graph node's identifier.",
          "type": "string"
        },
        "sourcePortId": {
          "description": "The identifier of the source node's port that the edge connects from.",
          "type": "string"
        },
        "targetNodeId": {
          "description": "The destination graph node's identifier.",
          "type": "string"
        },
        "targetPortId": {
          "description": "The identifier of the destination node's port that the edge connects into.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GraphNode": {
      "description": "Specifies a node in the web service graph. The node can either be an input, output or asset node, so only one of the corresponding id properties is populated at any given time.",
      "properties": {
        "assetId": {
          "description": "The id of the asset represented by this node.",
          "type": "string"
        },
        "inputId": {
          "description": "The id of the input element represented by this node.",
          "type": "string"
        },
        "outputId": {
          "description": "The id of the output element represented by this node.",
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "If applicable, parameters of the node. Global graph parameters map into these, with values set at runtime.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "GraphPackage": {
      "description": "Defines the graph of modules making up the machine learning solution.",
      "properties": {
        "edges": {
          "description": "The list of edges making up the graph.",
          "items": {
            "$ref": "#/definitions/GraphEdge"
          },
          "type": "array"
        },
        "graphParameters": {
          "additionalProperties": {
            "$ref": "#/definitions/GraphParameter"
          },
          "description": "The collection of global parameters for the graph, given as a global parameter name to GraphParameter map. Each parameter here has a 1:1 match with the global parameters values map declared at the WebServiceProperties level.",
          "type": "object"
        },
        "nodes": {
          "additionalProperties": {
            "$ref": "#/definitions/GraphNode"
          },
          "description": "The set of nodes making up the graph, provided as a nodeId to GraphNode map",
          "type": "object"
        }
      },
      "type": "object"
    },
    "GraphParameter": {
      "description": "Defines a global parameter in the graph.",
      "properties": {
        "description": {
          "description": "Description of this graph parameter.",
          "type": "string"
        },
        "links": {
          "description": "Association links for this parameter to nodes in the graph.",
          "items": {
            "$ref": "#/definitions/GraphParameterLink"
          },
          "type": "array"
        },
        "type": {
          "description": "Graph parameter's type.",
          "enum": [
            "String",
            "Int",
            "Float",
            "Enumerated",
            "Script",
            "Mode",
            "Credential",
            "Boolean",
            "Double",
            "ColumnPicker",
            "ParameterRange",
            "DataGatewayName"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ParameterType"
          }
        }
      },
      "required": [
        "type",
        "links"
      ],
      "type": "object"
    },
    "GraphParameterLink": {
      "description": "Association link for a graph global parameter to a node in the graph.",
      "properties": {
        "nodeId": {
          "description": "The graph node's identifier",
          "type": "string"
        },
        "parameterKey": {
          "description": "The identifier of the node parameter that the global parameter maps to.",
          "type": "string"
        }
      },
      "required": [
        "nodeId",
        "parameterKey"
      ],
      "type": "object"
    },
    "InputPort": {
      "description": "Asset input port",
      "properties": {
        "type": {
          "default": "Dataset",
          "description": "Port data type.",
          "enum": [
            "Dataset"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "InputPortType"
          }
        }
      },
      "type": "object"
    },
    "MachineLearningWorkspace": {
      "description": "Information about the machine learning workspace containing the experiment that is source for the web service.",
      "properties": {
        "id": {
          "description": "The workspace ARM resource id.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ModeValueInfo": {
      "description": "Nested parameter definition.",
      "properties": {
        "interfaceString": {
          "description": "The interface string name for the nested parameter.",
          "type": "string"
        },
        "parameters": {
          "description": "The definition of the parameter.",
          "items": {
            "$ref": "#/definitions/ModuleAssetParameter"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ModuleAssetParameter": {
      "description": "Parameter definition for a module asset.",
      "properties": {
        "modeValuesInfo": {
          "additionalProperties": {
            "$ref": "#/definitions/ModeValueInfo"
          },
          "description": "Definitions for nested interface parameters if this is a complex module parameter.",
          "type": "object"
        },
        "name": {
          "description": "Parameter name.",
          "type": "string"
        },
        "parameterType": {
          "description": "Parameter type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OutputPort": {
      "description": "Asset output port",
      "properties": {
        "type": {
          "default": "Dataset",
          "description": "Port data type.",
          "enum": [
            "Dataset"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OutputPortType"
          }
        }
      },
      "type": "object"
    },
    "PaginatedWebServicesList": {
      "description": "Paginated list of web services.",
      "properties": {
        "nextLink": {
          "description": "Continuation link to be used to potentially retrieve the next page of results in the list.",
          "type": "string"
        },
        "value": {
          "description": "List of web services objects.",
          "items": {
            "$ref": "#/definitions/WebService"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RealtimeConfiguration": {
      "description": "Holds the available configuration options for an Azure ML web service endpoint.",
      "properties": {
        "maxConcurrentCalls": {
          "description": "Maximum number of concurrent calls allowed on the realtime endpoint.",
          "maximum": 200,
          "minimum": 4,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Resource": {
      "properties": {
        "id": {
          "description": "Resource Id",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "Resource Location",
          "type": "string"
        },
        "name": {
          "description": "Resource Name",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags",
          "type": "object"
        },
        "type": {
          "description": "Resource type",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "location"
      ]
    },
    "ServiceInputOutputSpecification": {
      "description": "The swagger 2.0 schema describing the service's inputs or outputs. See Swagger specification: http://swagger.io/specification/",
      "properties": {
        "description": {
          "description": "Swagger schema description.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/TableSpecification"
          },
          "description": "Map of name to swagger schema for each input or output of the web service.",
          "type": "object"
        },
        "title": {
          "description": "Swagger schema title.",
          "type": "string"
        },
        "type": {
          "default": "object",
          "description": "The type of the entity described in swagger. Always 'object'.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "properties"
      ],
      "type": "object"
    },
    "StorageAccount": {
      "description": "Access information for a storage account.",
      "properties": {
        "key": {
          "description": "The storage account's active key.",
          "type": "string"
        },
        "name": {
          "description": "The storage account's name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TableSpecification": {
      "description": "The swagger 2.0 schema describing a single service input or output. See Swagger specification: http://swagger.io/specification/",
      "properties": {
        "description": {
          "description": "Swagger schema description.",
          "type": "string"
        },
        "properties": {
          "additionalProperties": {
            "$ref": "#/definitions/ColumnSpecification"
          },
          "description": "The set of columns within the data table.",
          "type": "object"
        },
        "title": {
          "description": "Swagger schema title.",
          "type": "string"
        },
        "type": {
          "default": "object",
          "description": "The type of the entity described in swagger. Always 'object'.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "properties"
      ],
      "type": "object"
    },
    "WebService": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Instance of an Azure ML web service resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebServiceProperties",
          "description": "Web service resource properties."
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "WebServiceKeys": {
      "description": "Access keys for the web service calls.",
      "properties": {
        "primary": {
          "description": "The primary access key.",
          "type": "string"
        },
        "secondary": {
          "description": "The secondary access key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebServiceProperties": {
      "description": "The set of properties specific to the Azure ML web service resource.",
      "discriminator": "packageType",
      "properties": {
        "assets": {
          "additionalProperties": {
            "$ref": "#/definitions/AssetItem"
          },
          "description": "Set of assets associated with the web service.",
          "type": "object"
        },
        "commitmentPlan": {
          "$ref": "#/definitions/CommitmentPlan",
          "description": "The commitment plan associated with this web service. This is required to be specified at creation time (PUT) and is not updateable afterwards."
        },
        "createdOn": {
          "description": "The moment of time the Azure ML web service was created.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the Azure ML web service.",
          "type": "string"
        },
        "diagnostics": {
          "$ref": "#/definitions/DiagnosticsConfiguration",
          "description": "Settings controlling the diagnostics traces collection for the web service."
        },
        "exampleRequest": {
          "$ref": "#/definitions/ExampleRequest",
          "description": "Sample request data for each of the service's inputs, as applicable."
        },
        "exposeSampleData": {
          "description": "Flag that controls whether to expose sample data or not in the web service's swagger definition.",
          "type": "boolean"
        },
        "input": {
          "$ref": "#/definitions/ServiceInputOutputSpecification",
          "description": "Swagger schema for the service's input(s), as applicable."
        },
        "keys": {
          "$ref": "#/definitions/WebServiceKeys",
          "description": "The set of access keys for the web service. If not specified at creation time (PUT), they will be generated automatically by the resource provider."
        },
        "machineLearningWorkspace": {
          "$ref": "#/definitions/MachineLearningWorkspace",
          "description": "This is only populated at creation time (PUT) for web services originating from an AzureML Studio experiment."
        },
        "modifiedOn": {
          "description": "The moment of time the web service was last modified.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "output": {
          "$ref": "#/definitions/ServiceInputOutputSpecification",
          "description": "Swagger schema for the service's output(s), as applicable."
        },
        "packageType": {
          "description": "The type of package deployed with this web service. Only Graph based services are supported at this time.",
          "enum": [
            "Graph"
          ],
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The set of global parameters values defined for the web service, given as a global parameter name to default value map. If no default value is specified, the parameter is considered to be required.",
          "type": "object"
        },
        "provisioningState": {
          "description": "The web service resource's provisioning state.",
          "enum": [
            "Unknown",
            "Provisioning",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ProvisioningState"
          }
        },
        "readOnly": {
          "description": "If true, the web service can no longer be updated / patched, only removed. Otherwise, the service resource supports changes.",
          "type": "boolean"
        },
        "realtimeConfiguration": {
          "$ref": "#/definitions/RealtimeConfiguration",
          "description": "Configuration for the service's realtime endpoint."
        },
        "storageAccount": {
          "$ref": "#/definitions/StorageAccount",
          "description": "The storage account associated with the service. This is used to store both datasets and diagnostic traces. This information is required at creation time (PUT) and only the key is updateable after that. The account credentials are hidden on a GET web service call."
        },
        "swaggerLocation": {
          "description": "The uri for the swagger spec associated with this web service.",
          "readOnly": true,
          "type": "string"
        },
        "title": {
          "description": "The title of the Azure ML web service.",
          "type": "string"
        }
      },
      "required": [
        "packageType"
      ],
      "type": "object"
    },
    "WebServicePropertiesForGraph": {
      "allOf": [
        {
          "$ref": "#/definitions/WebServiceProperties"
        }
      ],
      "description": "Properties specific to a Graph based web service.",
      "properties": {
        "package": {
          "$ref": "#/definitions/GraphPackage",
          "description": "The definition of the graph package making up this web service."
        }
      },
      "x-ms-discriminator-value": "Graph"
    }
  }
}
