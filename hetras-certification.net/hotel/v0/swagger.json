{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "api.hetras-certification.net",
  "basePath": "/",
  "info": {
    "title": "hetras hotel API v0",
    "version": "v0",
    "x-logo": {
      "url": "https://apis-guru.github.io/api-models/cache/logo/https_hetras.zendesk.com_hc_logo.gif"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://developer.hetras.com/swagger/spec/HotelAPIv0.json",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "hetras-certification.net",
    "x-serviceName": "hotel"
  },
  "paths": {
    "/api/hotel/v0/hotels": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Load the details about all the hotels your application has access to.",
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "A list of hotels.",
            "schema": {
              "items": {
                "$ref": "#/definitions/Hotel"
              },
              "type": "array"
            }
          },
          "204": {
            "description": "You donÂ´t have access to any hotels."
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI."
          },
          "422": {
            "description": "Bad request. Request parameters syntactically erroneous."
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Get a list of all the hotels of a chain your application has access to.",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/api/hotel/v0/hotels/{hotelId}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Load the details about the specified hotel.",
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The details about the hotel.",
            "schema": {
              "$ref": "#/definitions/Hotel"
            }
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI."
          },
          "422": {
            "description": "Bad request. Request parameters syntactically erroneous."
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Get the details of the hotel with the speccified hotel id.",
        "tags": [
          "Hotels"
        ]
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/room_types": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "description": "Specifies the hotel id to process.",
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Room type details for the hotel with the id specified in the URL.",
            "schema": {
              "items": {
                "$ref": "#/definitions/RoomType"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "500": {
            "description": "We couldn't return the representation due to an internal server error."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Get a list with the details of all room types for for the specified hotel id",
        "tags": [
          "RoomType"
        ]
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/room_types/{code}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "description": "Specifies the hotel id to process.",
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Specifies the room type code to process.",
            "in": "path",
            "name": "code",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Room type details for the hotel with the id specified in the URL.",
            "schema": {
              "$ref": "#/definitions/RoomType"
            }
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "500": {
            "description": "We couldn't return the representation due to an internal server error."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Get a requested room type for for the specified hotel id",
        "tags": [
          "RoomType"
        ]
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/rooms": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "Find all rooms for the hotel that match the specified filter criteria. The filtering will be done based on the current state of\r\n            the rooms.",
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "description": "The hotel you are trying to find rooms for.",
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Return results only for rooms that have the given frontdesk ocuppancy status.",
            "enum": [
              "Occupied",
              "Vacant"
            ],
            "in": "query",
            "name": "occupancy",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return results only for rooms that have the given room condition status.",
            "in": "query",
            "items": {
              "enum": [
                "CleanNotInspected",
                "Clean",
                "Dirty"
              ],
              "type": "string"
            },
            "name": "conditions",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return results only for rooms that have the given maintenance status.",
            "in": "query",
            "items": {
              "enum": [
                "NotSet",
                "None",
                "OutOfInventory",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "name": "maintenances",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "roomTypes",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "amenities",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "views",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "locations",
            "required": false,
            "type": "array"
          },
          {
            "description": "Amount of items to skip.",
            "format": "int32",
            "in": "query",
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Amount of items to select.",
            "format": "int32",
            "in": "query",
            "name": "top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Return total amount of items for a given filter criteria.",
            "enum": [
              "None",
              "AllPages"
            ],
            "in": "query",
            "name": "inlinecount",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "A list of rooms for the hotel based on the set filter criteria.",
            "schema": {
              "$ref": "#/definitions/RoomListResponse"
            }
          },
          "204": {
            "description": "There are no rooms found for the given filtering and pagination criteria."
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "422": {
            "description": "The request failed to validate."
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Get a list of rooms using the provided filtering and pagination criteria.",
        "tags": [
          "Room"
        ]
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/rooms/$count": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "description": "The hotel you are counting the rooms for.",
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Return results only for rooms that have the given frontdesk ocuppancy status.",
            "enum": [
              "Occupied",
              "Vacant"
            ],
            "in": "query",
            "name": "occupancy",
            "required": false,
            "type": "string"
          },
          {
            "description": "Return results only for rooms that have the given room condition status.",
            "in": "query",
            "items": {
              "enum": [
                "CleanNotInspected",
                "Clean",
                "Dirty"
              ],
              "type": "string"
            },
            "name": "conditions",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return results only for rooms that have the given maintenance status.",
            "in": "query",
            "items": {
              "enum": [
                "NotSet",
                "None",
                "OutOfInventory",
                "OutOfOrder",
                "OutOfService"
              ],
              "type": "string"
            },
            "name": "maintenances",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "roomTypes",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "amenities",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "views",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "locations",
            "required": false,
            "type": "array"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The room count in the hotel matching the given filter criteria.",
            "schema": {
              "$ref": "#/definitions/TotalCountResponse"
            }
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "422": {
            "description": "The request failed to validate."
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Get the count of all rooms in the hotel matching the given filter criteria.",
        "tags": [
          "Room"
        ]
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/rooms/available": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "description": "The hotel you are looking for available rooms.",
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Rooms returned will not be assigned to a reservation or be under maintenance between this date\r\n            and the specified to date. Still there could be departing reservations or ending maintenances\r\n            for this date.",
            "format": "date-time",
            "in": "query",
            "name": "from",
            "required": true,
            "type": "string"
          },
          {
            "description": "Rooms returned will not be assigned to a reservation or be under maintenance between the specified\r\n            from date and this date. Still there could be arriving reservations or beginning maintenances\r\n            for this date.",
            "format": "date-time",
            "in": "query",
            "name": "to",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies number of adults the returned rooms will have to be able to house. The default value is 1.",
            "format": "byte",
            "in": "query",
            "name": "adults",
            "required": false,
            "type": "string"
          },
          {
            "description": "Should rooms that are set OutOfService in the defined time period be returned as available. By default\r\n            they are not.",
            "in": "query",
            "name": "includeOutOfService",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "roomTypes",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "amenities",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "views",
            "required": false,
            "type": "array"
          },
          {
            "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "locations",
            "required": false,
            "type": "array"
          },
          {
            "description": "Amount of items to skip.",
            "format": "int32",
            "in": "query",
            "name": "skip",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Amount of items to select.",
            "format": "int32",
            "in": "query",
            "name": "top",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Return total amount of items for a given filter criteria.",
            "enum": [
              "None",
              "AllPages"
            ],
            "in": "query",
            "name": "inlinecount",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "A list of available rooms in the specified time period.",
            "schema": {
              "$ref": "#/definitions/RoomListResponse"
            }
          },
          "204": {
            "description": "There are no available rooms found for the given criteria."
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "422": {
            "description": "The request failed to validate."
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Request available rooms using a given criteria.",
        "tags": [
          "Room"
        ]
      }
    },
    "/api/hotel/v0/hotels/{hotelId}/rooms/{roomNumber}": {
      "get": {
        "consumes": [],
        "deprecated": false,
        "description": "With this call you can load the details about a specific room in the hotel. It will show you the current status of the room.",
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "description": "The hotel id the room belongs to.",
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The room number you want to see details for.",
            "in": "path",
            "name": "roomNumber",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Room details for the given room and hotel.",
            "schema": {
              "$ref": "#/definitions/Room"
            }
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI or the requested room could not be found."
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Get a specific room with all the details for the specified hotel id.",
        "tags": [
          "Room"
        ]
      },
      "patch": {
        "consumes": [
          "application/json",
          "text/json"
        ],
        "deprecated": false,
        "description": "The hetras API is using <a href=\"https://tools.ietf.org/html/rfc6902\" onfocus=\"this.blur()\" target=\"_blank\">IETF JSON Patch RFC 6902</a>\r\n            to partially update an existing resource. Currently this call only allows to modify condition and housekeeping occupancy status of the room.\r\n            <br /><br />\r\n            A request example:<br /><pre>\r\n            [\r\n              {\r\n                \"op\": \"replace\", \"path\": \"/status/condition\", \"value\": \"CleanNotInspected\"\r\n              }, {\r\n                \"op\": \"replace\", \"path\": \"/status/housekeeping_occupancy\", \"value\": \"Vacant\"\r\n              }\r\n            ]\r\n            </pre><br />\r\n            For more details on how the API responds to errors please check our documentation on \r\n            <a href=\"https://developer.hetras.com/docs/errors/\" onfocus=\"this.blur()\">Error Handling</a>.<br />",
        "parameters": [
          {
            "description": "Application identifier",
            "in": "header",
            "name": "App-Id",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_ids"
          },
          {
            "description": "Application key.",
            "in": "header",
            "name": "App-Key",
            "required": true,
            "type": "string",
            "x-data-threescale-name": "app_keys"
          },
          {
            "description": "The hotel id the room belongs to.",
            "format": "int32",
            "in": "path",
            "name": "hotelId",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The room number of the room you would like to update.",
            "in": "path",
            "name": "roomNumber",
            "required": true,
            "type": "string"
          },
          {
            "description": "A set of JSON Patch operations.",
            "in": "body",
            "name": "patchRequest",
            "required": true,
            "schema": {
              "items": {
                "$ref": "#/definitions/JsonPatchOperationRequest"
              },
              "type": "array"
            }
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "The update was successful",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad request. Request parameters or request body erroneous."
          },
          "401": {
            "description": "You provided wrong credentials, or you reached your API limit."
          },
          "403": {
            "description": "The application does not have access to the requested resource."
          },
          "404": {
            "description": "Not Found. The server has not found anything matching the Request-URI."
          },
          "422": {
            "description": "The request failed to validate."
          },
          "500": {
            "description": "We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles."
          },
          "503": {
            "description": "The server is currently unavailable. Please try later."
          }
        },
        "summary": "Partially updates a room",
        "tags": [
          "Room"
        ]
      }
    }
  },
  "definitions": {
    "EmbeddedReservation": {
      "description": "Basic data about a reservation",
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          },
          "description": "Collection of links to related resources",
          "type": "object"
        },
        "arrival_date": {
          "description": "The arrival date of the guests",
          "format": "date-time",
          "type": "string"
        },
        "confirmation_id": {
          "description": "he confirmation id for the booking which the guest can use to check in on the kiosk, add the \r\n            booking to the mobile app etc. It is used as identifier for all reservations done with the \r\n            same booking request",
          "type": "string"
        },
        "departure_date": {
          "description": "The departure date of the guests",
          "format": "date-time",
          "type": "string"
        },
        "reservation_number": {
          "description": "The reservation number of the reservation",
          "format": "int32",
          "type": "integer"
        },
        "reservation_status": {
          "description": "The current status of this reservation",
          "enum": [
            "Tentative",
            "Waitlisted",
            "OnRequest",
            "NonGuaranteed",
            "Guaranteed",
            "InHouse",
            "CheckedOut",
            "NoShow",
            "Denied",
            "Cancelled",
            "Released",
            "Walked",
            "Expired",
            "WalkIn",
            "Registered"
          ],
          "type": "string"
        }
      },
      "required": [
        "confirmation_id",
        "reservation_number",
        "reservation_status",
        "arrival_date",
        "departure_date"
      ],
      "type": "object"
    },
    "EmbeddedRoomType": {
      "description": "Basic data for a room type. To get the full details please follow the self link\r\n            from the links collection",
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          },
          "description": "Collection of links to related resources",
          "type": "object"
        },
        "code": {
          "description": "Code of the room type",
          "type": "string"
        },
        "description": {
          "description": "Description of the room type",
          "type": "string"
        },
        "name": {
          "description": "Name of the room type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmbeddedRoomWithStatus": {
      "properties": {
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          },
          "description": "Collection of links to related resources",
          "type": "object"
        },
        "description": {
          "description": "Description of the room",
          "type": "string"
        },
        "name": {
          "description": "Name of the room",
          "type": "string"
        },
        "number": {
          "description": "Number of the room",
          "type": "string"
        },
        "room_type": {
          "$ref": "#/definitions/EmbeddedRoomType",
          "description": "Room type of the room. Contains only the basic properties of the room type"
        },
        "status": {
          "$ref": "#/definitions/RoomStatus",
          "description": "Contains information about room status."
        }
      },
      "type": "object"
    },
    "GetAvailableRoomsRequest": {
      "properties": {
        "adults": {
          "description": "Specifies number of adults the returned rooms will have to be able to house. The default value is 1.",
          "format": "byte",
          "type": "string"
        },
        "amenities": {
          "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "from": {
          "description": "Rooms returned will not be assigned to a reservation or be under maintenance between this date\r\n            and the specified to date. Still there could be departing reservations or ending maintenances\r\n            for this date.",
          "format": "date-time",
          "type": "string"
        },
        "includeOutOfService": {
          "description": "Should rooms that are set OutOfService in the defined time period be returned as available. By default\r\n            they are not.",
          "type": "boolean"
        },
        "locations": {
          "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "roomTypes": {
          "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "to": {
          "description": "Rooms returned will not be assigned to a reservation or be under maintenance between the specified\r\n            from date and this date. Still there could be arriving reservations or beginning maintenances\r\n            for this date.",
          "format": "date-time",
          "type": "string"
        },
        "views": {
          "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "from",
        "to"
      ],
      "type": "object"
    },
    "GetRoomListRequest": {
      "properties": {
        "amenities": {
          "description": "Return result only for rooms having all of the given amenities. You can provide a comma seperated list of \r\n            amenity codes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "conditions": {
          "description": "Return results only for rooms that have the given room condition status.",
          "items": {
            "enum": [
              "CleanNotInspected",
              "Clean",
              "Dirty"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "locations": {
          "description": "Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of \r\n            location codes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "maintenances": {
          "description": "Return results only for rooms that have the given maintenance status.",
          "items": {
            "enum": [
              "NotSet",
              "None",
              "OutOfInventory",
              "OutOfOrder",
              "OutOfService"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "occupancy": {
          "description": "Return results only for rooms that have the given frontdesk ocuppancy status.",
          "enum": [
            "Occupied",
            "Vacant"
          ],
          "type": "string"
        },
        "roomTypes": {
          "description": "Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "views": {
          "description": "Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of \r\n            view codes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Hotel": {
      "properties": {
        "city": {
          "description": "The city the hotel is located in",
          "type": "string"
        },
        "code": {
          "description": "The code of the hotel",
          "type": "string"
        },
        "country": {
          "description": "The country the hotel is located. The country code is in ISO 3166-1 alpha-2 format\r\n            (see: <a href=\"http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm\" onfocus=\"this.blur()\" target=\"_blank\">http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm</a>)",
          "type": "string"
        },
        "current_business_day": {
          "description": "Return the current business day of the hotel in the ISO-8601 format \"YYYY-MM-DD\"",
          "format": "date-time",
          "type": "string"
        },
        "desc": {
          "description": "The descriptive text for the the hotel",
          "type": "string"
        },
        "email": {
          "description": "The email address of the hotel",
          "type": "string"
        },
        "fax": {
          "description": "The fax number of the hotel",
          "type": "string"
        },
        "hotel_id": {
          "description": "The id of the hotel",
          "format": "int32",
          "type": "integer"
        },
        "latitude": {
          "description": "The latitude for the geolocation of the hotel. This allows you to show the hotel on a map",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "description": "The longitude for the geolocation of the hotel. This allows you to show the hotel on a map",
          "format": "double",
          "type": "number"
        },
        "name": {
          "description": "The name of the hotel",
          "type": "string"
        },
        "phone": {
          "description": "The main phone number to call the hotel",
          "type": "string"
        },
        "postal_code": {
          "description": "The postal code of the hotel",
          "type": "string"
        },
        "state": {
          "description": "The state the hotel is located in",
          "type": "string"
        },
        "street": {
          "description": "The street address of the hotel",
          "type": "string"
        },
        "url": {
          "description": "The homepage URL of the hotel",
          "type": "string"
        },
        "utc_offset": {
          "description": "The current time offset of the hotel to UTC. This is taking into account daylight saving times and shows the offset for the time the request is handled. The response\r\n            will be in the format of \"UTCÂ±hh:mm\". If there is no offset to UTC it will be shown as \"UTC+00:00\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsonPatchOperationRequest": {
      "description": "Represents JSON Patch request",
      "properties": {
        "op": {
          "description": "The operation that should be performed on the object or attribute defined in the path",
          "enum": [
            "Add",
            "Remove",
            "Replace",
            "Move",
            "Copy",
            "Test"
          ],
          "type": "string"
        },
        "path": {
          "description": "The path to the object or attribute the operation should be performed on",
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Object",
          "description": "The new value of the object or attribute after the operation has been performed"
        }
      },
      "required": [
        "op",
        "path",
        "value"
      ],
      "type": "object"
    },
    "LinkObject": {
      "description": "A Link Object represents a hyperlink from the containing resource to a URI.",
      "properties": {
        "deprecation": {
          "description": "<para>The \"deprecation\" property is OPTIONAL.</para>\r\n<para>Â </para>\r\n<para>Its presence indicates that the link is to be deprecated (i.e.\r\n            removed) at a future date.  Its value is a URL that SHOULD provide\r\n            further information about the deprecation.\r\n            A client SHOULD provide some notification (for example, by logging a\r\n            warning message) whenever it traverses over a link that has this\r\n            property.  The notification SHOULD include the deprecation property's\r\n            value so that a client maintainer can easily find information about\r\n            the deprecation.</para>",
          "type": "string"
        },
        "href": {
          "description": "<para>The \"href\" property is REQUIRED.</para>\r\n<para>Â </para>\r\n<para>Its value is either a URI [RFC3986] or a URI Template [RFC6570].\r\n            If the value is a URI Template then the Link Object SHOULD have a\r\n            \"templated\" attribute whose value is true.</para>",
          "type": "string"
        },
        "hreflang": {
          "description": "<para>The \"hreflang\" property is OPTIONAL.</para>\r\n<para>Â </para>\r\n<para>Its value is a string and is intended for indicating the language of\r\n            the target resource (as defined by [RFC5988]).</para>",
          "type": "string"
        },
        "name": {
          "description": "<para>The \"name\" property is OPTIONAL.</para>\r\n<para>Â </para>\r\n<para>Its value MAY be used as a secondary key for selecting Link Objects\r\n            which share the same relation type.</para>",
          "type": "string"
        },
        "profile": {
          "description": "<para>The \"profile\" property is OPTIONAL.</para>\r\n<para>Â </para>\r\n<para>Its value is a string which is a URI that hints about the profile.</para>",
          "type": "string"
        },
        "templated": {
          "description": "<para>The \"templated\" property is OPTIONAL.</para>\r\n<para>Â </para>\r\n<para>Its value is boolean and SHOULD be true when the Link Object's \"href\"\r\n            property is a URI Template.\r\n            Its value SHOULD be considered false if it is undefined or any other\r\n            value than true.</para>",
          "type": "boolean"
        },
        "title": {
          "description": "<para>The \"title\" property is OPTIONAL.</para>\r\n<para>Â </para>\r\n<para>Its value is a string and is intended for labelling the link with a\r\n            human-readable identifier (as defined by [RFC5988]).</para>",
          "type": "string"
        },
        "type": {
          "description": "<para>The \"type\" property is OPTIONAL.</para>\r\n<para>Â </para>\r\n<para>Its value is a string used as a hint to indicate the media type\r\n            expected when dereferencing the target resource.</para>",
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "Object": {
      "properties": {},
      "type": "object"
    },
    "PagedDataRequest": {
      "properties": {
        "inlinecount": {
          "description": "Return total amount of items for a given filter criteria.",
          "enum": [
            "None",
            "AllPages"
          ],
          "type": "string"
        },
        "skip": {
          "description": "Amount of items to skip.",
          "format": "int32",
          "type": "integer"
        },
        "top": {
          "description": "Amount of items to select.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Room": {
      "description": "Represents a room for a property.",
      "properties": {
        "amenities": {
          "description": "List of amenities for the room",
          "items": {
            "$ref": "#/definitions/SimpleAttribute"
          },
          "type": "array"
        },
        "beddings": {
          "description": "Provides information about available beds in the room",
          "items": {
            "$ref": "#/definitions/RoomBedding"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the room",
          "type": "string"
        },
        "expected_occupancy": {
          "description": "The common amount of persons for the room",
          "format": "int32",
          "type": "integer"
        },
        "extra_bed_allowed": {
          "description": "Is there an extra bed allowed in the room",
          "type": "boolean"
        },
        "floor": {
          "description": "Floor of the room",
          "format": "int32",
          "type": "integer"
        },
        "locations": {
          "description": "List of locations for the room",
          "items": {
            "$ref": "#/definitions/SimpleAttribute"
          },
          "type": "array"
        },
        "max_persons": {
          "description": "Maximum number of allowed persons in the room",
          "format": "int32",
          "type": "integer"
        },
        "min_persons": {
          "description": "Minimum number of allowed persons in the room",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "Name of the room",
          "type": "string"
        },
        "number": {
          "description": "Number of the room",
          "type": "string"
        },
        "reservations": {
          "description": "Current reservation(s) for the room. It shows reservations due to arrive today and the one still inhouse.\r\n            If there is a day-use reservation assigned for today it can show you up to 3 reservations. One that will\r\n            depart today, the day-use reservqation for today and the one due to arrive",
          "items": {
            "$ref": "#/definitions/EmbeddedReservation"
          },
          "type": "array"
        },
        "room_type": {
          "$ref": "#/definitions/EmbeddedRoomType",
          "description": "Room type of the room. Contains only the basic properties of the room type"
        },
        "status": {
          "$ref": "#/definitions/RoomStatus",
          "description": "Contains information about room status"
        },
        "views": {
          "description": "List of views for the room",
          "items": {
            "$ref": "#/definitions/SimpleAttribute"
          },
          "type": "array"
        }
      },
      "required": [
        "number",
        "room_type",
        "status",
        "min_persons",
        "max_persons",
        "expected_occupancy",
        "floor"
      ],
      "type": "object"
    },
    "RoomBedding": {
      "description": "Information about room bedding",
      "properties": {
        "count": {
          "description": "Number of available beds of the specified type",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "The type of bed",
          "enum": [
            "NotDefined",
            "Double",
            "Futon",
            "King",
            "MurphyBed",
            "Queen",
            "SofaBed",
            "TatamiMats",
            "Twin",
            "Single"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RoomListResponse": {
      "properties": {
        "_count": {
          "description": "The number of items matching your request in total for all pages.",
          "format": "int32",
          "type": "integer"
        },
        "_links": {
          "additionalProperties": {
            "$ref": "#/definitions/LinkObject"
          },
          "description": "Collection of links to related resources",
          "type": "object"
        },
        "rooms": {
          "description": "List of rooms",
          "items": {
            "$ref": "#/definitions/EmbeddedRoomWithStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RoomMaintenance": {
      "properties": {
        "from": {
          "description": "Start date of the current maintenance work",
          "type": "string"
        },
        "reason": {
          "description": "A description about the reason for the ongoing maintenance work",
          "type": "string"
        },
        "to": {
          "description": "End date of the current maintenance work",
          "type": "string"
        },
        "value": {
          "description": "Maintenance Status",
          "enum": [
            "NotSet",
            "None",
            "OutOfInventory",
            "OutOfOrder",
            "OutOfService"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RoomStatus": {
      "description": "Represents current room status data.",
      "properties": {
        "condition": {
          "description": "Room Condition status",
          "enum": [
            "CleanNotInspected",
            "Clean",
            "Dirty"
          ],
          "type": "string"
        },
        "frontdesk_occupancy": {
          "description": "The frontdesk occupancy is set by reservation checkin and checkout. It can differ from the\r\n            housekeeping occupancy",
          "enum": [
            "Occupied",
            "Vacant"
          ],
          "type": "string"
        },
        "housekeeping_occupancy": {
          "description": "The housekeeping occupancy status is defined by the housekeeping staff. Usually it matches the\r\n            frontdesk occupancy, but sometimes the reservation is still inhouse, but it looks like there is no\r\n            guest in the room anymore. Then the statuses can differ.",
          "enum": [
            "Occupied",
            "Vacant"
          ],
          "type": "string"
        },
        "maintenance": {
          "$ref": "#/definitions/RoomMaintenance",
          "description": "Information about current ongoing room maintenance"
        }
      },
      "type": "object"
    },
    "RoomType": {
      "description": "Represent a room type for a property",
      "properties": {
        "amenities": {
          "description": "Provides a collection of amenities for the room type",
          "items": {
            "$ref": "#/definitions/SimpleAttribute"
          },
          "type": "array"
        },
        "bedding_type": {
          "description": "The type of bed for the room type",
          "enum": [
            "NotDefined",
            "Double",
            "Futon",
            "King",
            "MurphyBed",
            "Queen",
            "SofaBed",
            "TatamiMats",
            "Twin",
            "Single"
          ],
          "type": "string"
        },
        "code": {
          "description": "Code of the room type",
          "type": "string"
        },
        "description": {
          "description": "Provides a description of the room type",
          "type": "string"
        },
        "expected_occupancy": {
          "description": "The usual amount of persons for the room type",
          "format": "int32",
          "type": "integer"
        },
        "facilities": {
          "description": "Provides a collection of facilities for the room type",
          "items": {
            "$ref": "#/definitions/SimpleAttribute"
          },
          "type": "array"
        },
        "max_persons": {
          "description": "The maximum amount of persons for the room type",
          "format": "int32",
          "type": "integer"
        },
        "min_persons": {
          "description": "The minimum amount of persons for the room type",
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "description": "Name of the room type",
          "type": "string"
        },
        "views": {
          "description": "Provides a collection of views for the room type",
          "items": {
            "$ref": "#/definitions/SimpleAttribute"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SimpleAttribute": {
      "description": "Represents a simple attribute",
      "properties": {
        "code": {
          "description": "The code of the attribute",
          "type": "string"
        },
        "name": {
          "description": "The name of the attribute",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TotalCountResponse": {
      "properties": {
        "_count": {
          "description": "Returns the total count for all items matching the query parameters. If none is matching it will return 0.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "_count"
      ],
      "type": "object"
    }
  }
}
