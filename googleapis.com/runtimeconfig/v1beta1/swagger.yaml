swagger: '2.0'
schemes:
  - https
host: runtimeconfig.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: |
    Provides capabilities for dynamic configuration and coordination for applications running on Google Cloud Platform.
  title: Google Cloud RuntimeConfig
  version: v1beta1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://apis-guru.github.io/api-models/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png'
  x-origin:
    format: google
    url: 'https://runtimeconfig.googleapis.com/$discovery/rest?version=v1beta1'
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: runtimeconfig
externalDocs:
  url: 'https://cloud.google.com/deployment-manager/docs/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
      'https://www.googleapis.com/auth/cloudruntimeconfig': Manage your Google Cloud Platform services' runtime configuration
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v1beta1/{name}':
    delete:
      description: Deletes the waiter with the specified name.
      operationId: runtimeconfig.projects.configs.waiters.delete
      parameters:
        - description: |-
            The Waiter resource to delete, in the format:

             `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Set to `true` to recursively delete multiple variables with the same
            prefix.
          in: query
          name: recursive
          type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
    get:
      description: |-
        Gets the latest state of a long-running operation.  Clients can use this
        method to poll the operation result at intervals as recommended by the API
        service.
      operationId: runtimeconfig.projects.configs.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
    put:
      description: Updates an existing variable with a new value.
      operationId: runtimeconfig.projects.configs.variables.update
      parameters:
        - description: |-
            The name of the variable to update, in the format:

            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Variable'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
  '/v1beta1/{name}:watch':
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Watches a specific variable and waits for a change in the variable's value.
        When there is a change, this method returns the new value or times out.

        If a variable is deleted while being watched, the `variableState` state is
        set to `DELETED` and the method returns the last known variable `value`.

        If you set the deadline for watching to a larger value than internal timeout
        (60 seconds), the current variable value is returned and the `variableState`
        will be `VARIABLE_STATE_UNSPECIFIED`.

        To learn more about creating a watcher, read the
        [Watching a Variable for Changes](/deployment-manager/runtime-configurator/watching-a-variable)
        documentation.
      operationId: runtimeconfig.projects.configs.variables.watch
      parameters:
        - description: |-
            The name of the variable to watch, in the format:

            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/WatchVariableRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Variable'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
  '/v1beta1/{parent}/configs':
    get:
      description: Lists all the RuntimeConfig resources within project.
      operationId: runtimeconfig.projects.configs.list
      parameters:
        - description: |-
            The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)
            for this request, in the format `projects/[PROJECT_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Specifies the number of results to return per page. If there are fewer
            elements than the specified number, returns all elements.
          in: query
          name: pageSize
          type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListConfigsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a new RuntimeConfig resource. The configuration name must be
        unique within project.
      operationId: runtimeconfig.projects.configs.create
      parameters:
        - description: |-
            The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&ref_topic=6158848)
            for this request, in the format `projects/[PROJECT_ID]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RuntimeConfig'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/RuntimeConfig'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
  '/v1beta1/{parent}/variables':
    get:
      description: |-
        Lists variables within given a configuration, matching any provided filters.
        This only lists variable names, not the values.
      operationId: runtimeconfig.projects.configs.variables.list
      parameters:
        - description: |-
            The path to the RuntimeConfig resource for which you want to list variables.
            The configuration must exist beforehand; the path must by in the format:

            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Specifies the number of results to return per page. If there are fewer
            elements than the specified number, returns all elements.
          in: query
          name: pageSize
          type: integer
        - description: |-
            Filters variables by matching the specified filter. For example:

            `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
          in: query
          name: filter
          type: string
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListVariablesResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a variable within the given configuration. You cannot create
        a variable with a name that is a prefix of an existing variable name, or a
        name that has an existing variable name as a prefix.

        To learn more about creating a variable, read the
        [Setting and Getting Data](/deployment-manager/runtime-configurator/seta-and-get-variables)
        documentation.
      operationId: runtimeconfig.projects.configs.variables.create
      parameters:
        - description: |-
            The path to the RutimeConfig resource that this variable should belong to.
            The configuration must exist beforehand; the path must by in the format:

            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Variable'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Variable'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
  '/v1beta1/{parent}/waiters':
    get:
      description: List waiters within the given configuration.
      operationId: runtimeconfig.projects.configs.waiters.list
      parameters:
        - description: |-
            The path to the configuration for which you want to get a list of waiters.
            The configuration must exist beforehand; the path must by in the format:

            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - description: |-
            Specifies the number of results to return per page. If there are fewer
            elements than the specified number, returns all elements.
          in: query
          name: pageSize
          type: integer
        - description: |-
            Specifies a page token to use. Set `pageToken` to a `nextPageToken`
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListWaitersResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/upload_protocol'
    post:
      description: |-
        Creates a Waiter resource. This operation returns a long-running Operation
        resource which can be polled for completion. However, a waiter with the
        given name will exist (and can be retrieved) prior to the operation
        completing. If the operation fails, the failed Waiter resource will
        still exist and must be deleted prior to subsequent creation attempts.
      operationId: runtimeconfig.projects.configs.waiters.create
      parameters:
        - description: |-
            The path to the configuration that will own the waiter.
            The configuration must exist beforehand; the path must by in the format:

            `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`.
          in: path
          name: parent
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Waiter'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloudruntimeconfig'
      tags:
        - projects
definitions:
  Cardinality:
    description: |-
      A Cardinality condition for the Waiter resource. A cardinality condition is
      met when the number of variables under a specified path prefix reaches a
      predefined number. For example, if you set a Cardinality condition where
      the `path` is set to `/foo` and the number of paths is set to 2, the
      following variables would meet the condition in a RuntimeConfig resource:

      + `/foo/variable1 = "value1"`
      + `/foo/variable2 = "value2"`
      + `/bar/variable3 = "value3"`

      It would not would not satisify the same condition with the `number` set to
      3, however, because there is only 2 paths that start with `/foo`.
      Cardinality conditions are recursive; all subtrees under the specific
      path prefix are counted.
    properties:
      number:
        description: |-
          The number variables under the `path` that must exist to meet this
          condition. Defaults to 1 if not specified.
        format: int32
        type: integer
      path:
        description: 'The root of the variable subtree to monitor. For example, `/foo`.'
        type: string
    type: object
  Empty:
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
    properties: {}
    type: object
  EndCondition:
    description: The condition that a Waiter resource is waiting for.
    properties:
      cardinality:
        $ref: '#/definitions/Cardinality'
        description: The cardinality of the `EndCondition`.
    type: object
  ListConfigsResponse:
    properties:
      configs:
        description: |-
          A list of the configurations in the project. The order of returned
          objects is arbitrary; that is, it is not ordered in any particular way.
        items:
          $ref: '#/definitions/RuntimeConfig'
        type: array
      nextPageToken:
        description: |-
          This token allows you to get the next page of results for list requests.
          If the number of results is larger than `pageSize`, use the `nextPageToken`
          as a value for the query parameter `pageToken` in the next list request.
          Subsequent list requests will have their own `nextPageToken` to continue
          paging through the results
        type: string
    type: object
  ListVariablesResponse:
    properties:
      nextPageToken:
        description: |-
          This token allows you to get the next page of results for list requests.
          If the number of results is larger than `pageSize`, use the `nextPageToken`
          as a value for the query parameter `pageToken` in the next list request.
          Subsequent list requests will have their own `nextPageToken` to continue
          paging through the results
        type: string
      variables:
        description: |-
          A list of variables and their values. The order of returned variable
          objects is arbitrary.
        items:
          $ref: '#/definitions/Variable'
        type: array
    type: object
  ListWaitersResponse:
    description: |-
      Response for the `ListWaiters()` method.
      Order of returned waiter objects is arbitrary.
    properties:
      nextPageToken:
        description: |-
          This token allows you to get the next page of results for list requests.
          If the number of results is larger than `pageSize`, use the `nextPageToken`
          as a value for the query parameter `pageToken` in the next list request.
          Subsequent list requests will have their own `nextPageToken` to continue
          paging through the results
        type: string
      waiters:
        description: Found waiters in the project.
        items:
          $ref: '#/definitions/Waiter'
        type: array
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If true, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @ype with type URL.
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @ype with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  RuntimeConfig:
    description: |-
      A RuntimeConfig resource is the primary resource in the Cloud RuntimeConfig
      service. A RuntimeConfig resource consists of metadata and a hierarchy of
      variables.
    properties:
      description:
        description: |-
          An optional description of the RuntimeConfig object.
          The length of the description must be less than 256 bytes.
        type: string
      name:
        description: |-
          The resource name of a runtime config. The name must have the format:

              projects/[PROJECT_ID]/configs/[CONFIG_NAME]

          The `[PROJECT_ID]` must be a valid project ID, and `[CONFIG_NAME]` is an
          arbitrary name that matches RFC 1035 segment specification. The length of
          `[CONFIG_NAME]` must be less than 64 bytes.

          You pick the RuntimeConfig resource name, but the server will validate that
          the name adheres to this format. After you create the resource, you cannot
          change the resource's name.
        type: string
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` which can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting purpose.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There will be a
          common set of message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @ype with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  Variable:
    description: |-
      Describes a single variable within a RuntimeConfig resource.
      The name denotes the hierarchical variable name. For example,
      `ports/serving_port` is a valid variable name. The variable value is an
      opaque string and only leaf variables can have values (that is, variables
      that do not have any child variables).
    properties:
      name:
        description: |-
          The name of the variable resource, in the format:

              projects/[PROJECT_ID]/configs/[CONFIG_NAME]/variables/[VARIABLE_NAME]

          The `[PROJECT_ID]` must be a valid project ID, `[CONFIG_NAME]` must be a
          valid RuntimeConfig reource and `[VARIABLE_NAME]` follows Unix file system
          file path naming.

          The `[VARIABLE_NAME]` can contain ASCII letters, numbers, slashes and
          dashes. Slashes are used as path element separators and are not part of the
          `[VARIABLE_NAME]` itself, so `[VARIABLE_NAME]` must contain at least one
          non-slash character. Multiple slashes are coalesced into single slash
          character. Each path segment should follow RFC 1035 segment specification.
          The length of a `[VARIABLE_NAME]` must be less than 256 bytes.

          Once you create a variable, you cannot change the variable name.
        type: string
      state:
        description: |-
          [Ouput only] The current state of the variable. The variable state indicates
          the outcome of the `variables().watch` call and is visible through the
          `get` and `list` calls.
        enum:
          - VARIABLE_STATE_UNSPECIFIED
          - UPDATED
          - DELETED
        type: string
      updateTime:
        description: '[Output Only] The time of the last variable update.'
        format: google-datetime
        type: string
      value:
        description: |-
          The value of the variable. The length of the value must be less than 4096
          bytes. Empty values are also accepted. The value must be Base64 encoded.
        format: byte
        type: string
    type: object
  Waiter:
    description: |-
      A Waiter resource waits for some end condition within a RuntimeConfig resource
      to be met before it returns. For example, assume you have a distributed
      system where each node writes to a Variable resource indidicating the node's
      readiness as part of the startup process.

      You then configure a Waiter resource with the success condition set to wait
      until some number of nodes have checked in. Afterwards, your application
      runs some arbitrary code after the condition has been met and the waiter
      returns successfully.

      Once created, a Waiter resource is immutable.

      To learn more about using waiters, read the
      [Creating a Waiter](/deployment-manager/runtime-config/creating-a-water)
      documentation.
    properties:
      createTime:
        description: |-
          [Output Only] The instant at which this Waiter resource was created. Adding
          the value of `timeout` to this instant yields the timeout deadline for the
          waiter.
        format: google-datetime
        type: string
      done:
        description: |-
          [Output Only] If the value is `false`, it means the waiter is still waiting
          for one of its conditions to be met.

          If true, the waiter has finished. If the waiter finished due to a timeout
          or failure, `error` will be set.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: |
          [Output Only] If the waiter ended due to a failure or timeout, this value
          will be set.
      failure:
        $ref: '#/definitions/EndCondition'
        description: |-
          [Optional] The failure condition of this waiter. If this condition is met,
          `done` will be set to `true` and the `error` code will be set to `ABORTED`.
          The failure condition takes precedence over the success condition. If both
          conditions are met, a failure will be indicated. This value is optional; if
          no failure condition is set, the only failure scenario will be a timeout.
      name:
        description: |-
          The name of the Waiter resource, in the format:

              projects/[PROJECT_ID]/configs/[CONFIG_NAME]/waiters/[WAITER_NAME]

          The `[PROJECT_ID]` must be a valid Google Cloud project ID,
          the `[CONFIG_NAME]` must be a valid RuntimeConfig resource, the
          `[WAITER_NAME]` must match RFC 1035 segment specification, and the length
          of `[WAITER_NAME]` must be less than 64 bytes.

          After you create a Waiter resource, you cannot change the resource name.
        type: string
      success:
        $ref: '#/definitions/EndCondition'
        description: |-
          [Required] The success condition. If this condition is met, `done` will be
          set to `true` and the `error` value will remain unset. The failure condition
          takes precedence over the success condition. If both conditions are met, a
          failure will be indicated.
      timeout:
        description: |-
          [Required] Specifies the timeout of the waiter in seconds, beginning from
          the instant that `waiters().create` method is called. If this time elapses
          before the success or failure conditions are met, the waiter fails and sets
          the `error` code to `DEADLINE_EXCEEDED`.
        format: google-duration
        type: string
    type: object
  WatchVariableRequest:
    description: Request for the `WatchVariable()` method.
    properties:
      newerThan:
        description: |-
          If specified, checks the current timestamp of the variable and if the
          current timestamp is newer than `newerThan` timestamp, the method returns
          immediately.

          If not specified or the variable has an older timestamp, the watcher waits
          for a the value to change before returning.
        format: google-datetime
        type: string
    type: object
